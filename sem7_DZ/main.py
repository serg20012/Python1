# Задача 34:  Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм.
# Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает,
# Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв)
# (Гласных букв 10: а, у, о, ы, и, э, я, ю, ё, е.)
# в каждой фразе стихотворения одинаковое. Фраза может состоять из одного слова, если во фразе
# несколько слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами.
# Стихотворение  Винни-Пух вбивает в программу с клавиатуры. В ответе напишите “Парам пам-пам”,
# если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке
# *Пример:*
# **Ввод:** пара-ра-рам рам-пам-папам па-ра-па-да
# **Вывод:** Парам пам-пам

# data = "пара-ра-рам рам-пам-папам па-ра-па-да"
# glasn = ["а", "у", "о", "ы", "и", "э", "я", "ю", "ё", "е"]
# res = [] # новый список для учета гласных в каждой фразе
# data1 = data.split()
# for phrase in data1: #цикл для пробегания по всем фразам
#     count = 0
#     for letter in phrase: #цикл для пробегания буквам в фразе
#         if letter in glasn: #проверка буквы фразы на гласность
#             count += 1
#     res.append(count) #по окончанию каждой фразы закидываем результат подсчета в список
# print(res)

# if all(x == res[0] for x in res): #проверка массива на равность всех значений
#     print ("есть рифма")
# else : print ("нет рифмы")

# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы
# (подумайте, почему не с нуля). Примечание: бинарной операцией называется любая операция,
# у которой ровно два аргумента, как, например, у операции умножения.
# *Пример:*
# **Ввод:** `print_operation_table(lambda x, y: x * y) `
# **Вывод:**
# 1 2 3 4 5 6
# 2 4 6 8 10 12
# 3 6 9 12 15 18
# 4 8 12 16 20 24
# 5 10 15 20 25 30
# 6 12 18 24 30 36

def print_operation_table(oper, rows, col):
    for i in range(1, rows+1):
        for j in range(1, col+1):
            res = oper(i, j)
            print(res, end=" ")
        print()


x = int(input("Введите строки: "))
y = int(input("Введите столбцы: "))

print_operation_table(lambda rows, col: rows * col, x, y)
